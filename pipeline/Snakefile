GENOME = "yeast.fa"
INDEX = "yeast"
N = range(1,1001)
ADAPTERS = "CTGTAGGCACCATCAAT"


samples_url = {"SRR5090934":"https://sra-downloadb.be-md.ncbi.nlm.nih.gov/sos2/sra-pub-run-9/SRR5090934/SRR5090934.1",
               "SRR5090935":"https://sra-downloadb.be-md.ncbi.nlm.nih.gov/sos2/sra-pub-run-9/SRR5090935/SRR5090935.1",
               "SRR5090936":"https://sra-downloadb.be-md.ncbi.nlm.nih.gov/sos2/sra-pub-run-9/SRR5090936/SRR5090936.1",
               "SRR5090937":"https://sra-downloadb.be-md.ncbi.nlm.nih.gov/sos2/sra-pub-run-9/SRR5090937/SRR5090937.1",
               "SRR9670817":"https://sra-download.ncbi.nlm.nih.gov/traces/sra53/SRR/009444/SRR9670817",
               "SRR9670821":"https://sra-download.ncbi.nlm.nih.gov/traces/sra59/SRR/009444/SRR9670821",
               "SRR9670822":"https://sra-download.ncbi.nlm.nih.gov/traces/sra67/SRR/009444/SRR9670822",
               "SRR9670814":"https://sra-download.ncbi.nlm.nih.gov/traces/sra25/SRR/009444/SRR9670814",
               "SRR9670819":"https://sra-download.ncbi.nlm.nih.gov/traces/sra59/SRR/009444/SRR9670819",
               "SRR9670820":"https://sra-download.ncbi.nlm.nih.gov/traces/sra50/SRR/009444/SRR9670820",
               "SRR9670818":"https://sra-download.ncbi.nlm.nih.gov/traces/sra53/SRR/009444/SRR9670818",
               "SRR9670815":"https://sra-download.ncbi.nlm.nih.gov/traces/sra2/SRR/009444/SRR9670815",
               "SRR9670823":"https://sra-download.ncbi.nlm.nih.gov/traces/sra2/SRR/009444/SRR9670823",
               "SRR9670816":"https://sra-download.ncbi.nlm.nih.gov/traces/sra19/SRR/009444/SRR9670816"}


FP_RNA = {"SRR9670822":"SRR9670821",
          "SRR9670823":"SRR9670820",
          "SRR5090937":"SRR5090935",
          "SRR5090936":"SRR5090934"}


"""
rule all:
    output:
         FP_RNA["SRR9670822"]_FP_RNA["SRR9670822"].value().slopes.png
"""

rule download:
    output: "{sample}.fastq" 
    params:
        download = lambda wildcards: samples_url[wildcards.sample]
    shell: """
        wget {params.download} 
        fastq-dump --split-files SRR5090934.1
	fastq-dump --split-files SRR5090935.1
	fastq-dump --split-files SRR5090936.1
	fastq-dump --split-files SRR5090937.1
	mv SRR5090934.1_1.fastq  SRR5090934.fastq
	mv SRR5090935.1_1.fastq  SRR5090935.fastq
	mv SRR5090936.1_1.fastq  SRR5090936.fastq
	mv SRR5090937.1_1.fastq  SRR5090937.fastq
        fastq-dump --split-files SRR9670817
	fastq-dump --split-files SRR9670821
	fastq-dump --split-files SRR9670822
	fastq-dump --split-files SRR9670820
	fastq-dump --split-files SRR9670818
	fastq-dump --split-files SRR9670815
	fastq-dump --split-files SRR9670823
	fastq-dump --split-files SRR9670816
        """


rule ribofilio: 
    input:
        fp = "{SAMPLE1}.bed",
	rna = "{SAMPLE2}.bed",
	genome = GENOME 
    output: 
         "{SAMPLE1}_{SAMPLE2}.regression.log"
    params:
        prefix="{SAMPLE1}_{SAMPLE2}"
    shell:
        "python ../src/ribofilio.py -t {input.genome} -f {input.fp} -r {input.rna} -o {params.prefix} "

rule  shuffle: 
    input: 
        fp = "{SAMPLE}.bed",
        genome = GENOME
    params: 
        prefix = "{IDX}" 
    output:
        "{SAMPLE}.{IDX}.bed" 
    shell: 
        "python src/shuffle.py -t {input.genome} -b {input.fp} -o {output}"


rule ribo_all: 
    input:
       fp = "{FP}_{RNA}.regression.log",
       dummies = expand("{{FP}}.{IDX}_{{RNA}}.regression.log", IDX= N)
    params:
       all = "{FP}_{RNA}.all" 
    output:
       "{FP}_{RNA}.slopes.png"
    shell: 
       """
       cat {input.fp} {input.dummies} > {params.all}
       python src/stats.py {params.all}
       """    
       

rule subset:
    input:
        fp = "{SAMPLE1}.bed",
        rna = "{SAMPLE2}.bed",
	smallset ="{SUBSET}.txt",
        genome = GENOME
    output:
        "{SAMPLE1}_{SAMPLE2}-{SUBSET}.regression.log"
    params:
        prefix="{SAMPLE1}_{SAMPLE2}-{SUBSET}"
    shell: 
        "python ../src/ribofilio.py -t {input.genome} -f {input.fp} -r {input.rna} -s {input.smallset} -o {params.prefix}"

rule subset_all: 
    input:
       fp = "{FP}_{RNA}-{SUBSET}.regression.log",
       dummies = expand("{{FP}}.{IDX}_{{RNA}}-{{SUBSET}}.regression.log", IDX= N)
    params:
       all = "{FP}_{RNA}.{SUBSET}.all"
    output:
       "{FP}_{RNA}.{SUBSET}.slopes.png"
    shell:
       """
       cat {input.fp} {input.dummies} > {params.all}
       python src/stats.py {params.all}
       """

rule get_GO:
     output:
        "GO0006119.txt",
        "GO0006406.txt",
        "GO0006412.txt",
        "GO0006950.txt",
        "GO0007049.txt",
        "GO0009651.txt"
     shell:
        "Rscript ../src/getBiomart.R"

rule cluster: 
     output: 
         "yeast02000.txt",
         "yeast20004000.txt",
         "yeast40006000.txt",
         "yeast6000100000.txt"
     shell: 
          """
          python src/gcluster.py yeast.fa yeast02000.txt --max 2000 --min 0
          python src/gcluster.py yeast.fa yeast20004000.txt --max 4000 --min 2000
          python src/gcluster.py yeast.fa yeast40006000.txt --max 6000 --min 4000
          python src/gcluster.py yeast.fa yeast6000100000.txt --max 100000 --min 6000
          """ 

rule tobed: 
	input: 
             "{SAMPLE}.bam" 
	output: 
	     "{SAMPLE}.bed"
	shell: 
            "bedtools bamtobed -i {input} > {output}"

rule index: 
     input: 
        genome = GENOME
     output: 
        INDEX
     shell: 
        "bowtie2-build {input.genome} {output} && touch {output}"

rule tobam:
      input:
          index  = INDEX,
          sample = "galore/{READS}_trimmed.fq.gz"
      output:
          "{READS}.bowtie2.bam"  
      shell: 
          "bowtie2 -x {input.index} -U {input.sample} -S | samtools view -S -b > {output}" 


rule trim: 
    input:
        sample = "SAMPLE}.fastq"
    output: 
        "galore/{SAMPLE}_trimmed.fq.gz"
    params: 
       adapter =ADAPTERS
    shell:
        """
        mkdir galore
        mkdir fastqc
        trim_galore --gzip --retain_unpaired --trim1 -a {params.adapter} --fastqc --fastqc_args "--outdir fastqc" -o galore {output}  
        """
