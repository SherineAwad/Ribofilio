configfile: "config.yaml"

rule all:
    input:
        expand("{GO}.txt", GO=config['GO'] ),     
        expand("{FP}_{RNA}.regression.log", FP = config['D1_FP'], RNA = config['D1_RNA']),
        expand("{FP}_{RNA}-{SUBSET}.regression.log", FP = config['D1_FP'], RNA = config['D1_RNA'], SUBSET=config['GL']), 
        expand("{FP}_{RNA}-{SUBSET}.regression.log", FP = config['D1_FP'], RNA = config['D1_RNA'], SUBSET=config['GO']),
        expand("{FP}_{RNA}.regression.log", FP = config['D2_FP'], RNA = config['D2_RNA']),
        expand("{FP}_{RNA}-{SUBSET}.regression.log", FP = config['D2_FP'], RNA = config['D2_RNA'], SUBSET=config['GL']),
        expand("{FP}_{RNA}-{SUBSET}.regression.log", FP = config['D2_FP'], RNA = config['D2_RNA'], SUBSET=config['GO']),
        expand("{FP}_{RNA}.regression.log", FP = config['D3_FP'], RNA = config['D3_RNA']),
        expand("{FP}_{RNA}.regression.log", FP = config['D4_FP'], RNA = config['D4_RNA']),

        

rule ribofilio: 
    input:
         fp = "{SAMPLE1}.bed",
	 rna = "{SAMPLE2}.bed",
	 genome = config['GENOME'] 
    output: 
         "{SAMPLE1}_{SAMPLE2}.regression.log"
    params:
        prefix="{SAMPLE1}_{SAMPLE2}", 
        binsize = config['BINSIZE']
    shell:
        "python {config[src]}/ribofilio.py -t {input.genome} -f {input.fp} -r {input.rna} -b {params.binsize} -o {params.prefix} "

       
rule subset:
    input:
        fp = "{SAMPLE1}.bed",
        rna = "{SAMPLE2}.bed",
	subset = "{SUBSET}.txt",
        genome = config['GENOME']
    output:
        "{SAMPLE1}_{SAMPLE2}-{SUBSET}.regression.log"
    params:
        prefix="{SAMPLE1}_{SAMPLE2}-{SUBSET}",
        binsize = config['BINSIZE']
    shell: 
        "python {config[src]}/ribofilio.py -t {input.genome} -f {input.fp} -r {input.rna} -s {input.subset} -b {params.binsize} -o {params.prefix}"


rule get_GO:
     output:
        expand("{GO}.txt", GO=config['GO'])
     params: 
        go = expand("{GO}", GO=config['GO'] )
     shell:
         """
         Rscript {config['scripts']}/getGO.R {params.go}
         """

rule cluster: 
     output: 
        expand("{GL}.txt", GL=config['GL'])     
     shell: 
          """
          python {config[scripts]}/gcluster.py yeast.fa yeast0500.txt -n 0 -x 500
	  python {config[scripts]}/gcluster.py yeast.fa yeast5001000.txt -n 500 -x 1000
          python {config[scripts]}/gcluster.py yeast.fa yeast01000.txt -n 0 -x 1000
	  python {config[scripts]}/gcluster.py yeast.fa yeast10002000.txt -n 1000 -x 2000
	  python {config[scripts]}/gcluster.py yeast.fa yeast20003000.txt -n 2000 -x 3000
	  python {config[scripts]}/gcluster.py yeast.fa yeast30004000.txt -n 3000 -x 4000
	  python {config[scripts]}/gcluster.py yeast.fa yeast40005000.txt -n 4000 -x 5000
	  python {config[scripts]}/gcluster.py yeast.fa yeastg5000.txt -n 5000
          """ 


rule index: 
     input: 
        genome = config['GENOME']
     output: 
        config['INDEX']
     shell: 
        "bowtie2-build {input.genome} {output} && touch {output}"

rule trim: 
    input:
        sample = "{SAMPLE}.fastq",
	index = config['INDEX']
    output:
        "galore/{SAMPLE}_trimmed.fq.gz", 
    params: 
       adapter =config['ADAPTERS']
    shell:
        """
        trim_galore --gzip --retain_unpaired --trim1 -a {params.adapter} --fastqc --fastqc_args "--outdir fastqc" -o galore {input.sample}   
        """ 

rule tobam:
      input:
          index  = config['INDEX'],
          sample = "galore/{READS}_trimmed.fq.gz"
      output:
          "{READS}.sam",
          "{READS}.bowtie2.bam"
      shell: 
          """ 
           bowtie2 -x {input.index} -U {input.sample} -S {output[0]}
           samtools view -S -b {output[0]} > {output[1]}
          """ 	

rule tobed: 
        input: 
             "{SAMPLE}.bowtie2.bam", 
             genome = config['GENOME'] 
        output: 
	     "{SAMPLE}.bed" 
	run: 
            """
            bedtools bamtobed -i {input} > {output}
            """


rule getGenome:
     output:
           config['GENOME']
     shell:
        """
        curl -O ftp://ftp.ensembl.org/pub/release-98/fasta/saccharomyces_cerevisiae/cdna/Saccharomyces_cerevisiae.R64-1-1.cdna.all.fa.gz
        gunzip Saccharomyces_cerevisiae.R64-1-1.cdna.all.fa.gz
        mv  Saccharomyces_cerevisiae.R64-1-1.cdna.all.fa {output}
        """
