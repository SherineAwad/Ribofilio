GENOME = "yeast.fa"
INDEX = "yeast"
N = range(1,2)


"""
rule all:
    input:
	"sample.trimmed.fq.gz"
"""


rule ribofilio: 
    input:
        fp = "{SAMPLE1}.bed",
	rna = "{SAMPLE2}.bed",
        fake = expand("{{SAMPLE1}}_{IDX}.bed", IDX =N ),
	genome = GENOME 
    output: 
         "{SAMPLE1}_{SAMPLE2}.regression.log"
    params:
        prefix="{SAMPLE1}_{SAMPLE2}"

    shell:
        """
        python ../src/ribofilio.py -t {input.genome} -f {input.fp} -r {input.rna} -o {params.prefix} 
        python ../src/ribofilio.py -t {input.genome} -f {input.fake} -r {input.rna} -o {params.prefix} -p 0
        """ 
  
rule run_subset:
    input:
        fp = "{SAMPLE1}.bed",
        fake = expand("{{SAMPLE1}}_{IDX}.bed", IDX =N ),
        rna = "{SAMPLE2}.bed",
	smallset ="{SUBSET}.txt",
        genome = GENOME
    output:
         "{SAMPLE1}_{SAMPLE2}_{SUBSET}.regression.log"
    params:
        prefix="{SAMPLE1}_{SAMPLE2}_{SUBSET}"
    shell: 
        """
        python ../src/ribofilio.py -t {input.genome} -f {input.fp} -r {input.rna} -s {input.smallset} -o {params.prefix}
        python ../src/ribofilio.py -t {input.genome} -f {input.fake} -r {input.rna} -s {input.smallset} -o {params.prefix} -p 0 
        """ 

rule get_GO:
     output:
        "GO0006119.txt",
        "GO0006406.txt",
        "GO0006412.txt",
        "GO0006950.txt",
        "GO0007049.txt",
        "GO0009651.txt"
     shell:
        "Rscript ../src/getBiomart.R"

rule cluster: 
     output: 
         "yeast02000.txt",
         "yeast20004000.txt",
         "yeast40006000.txt",
         "yeast6000100000.txt"
     shell: 
          """
          python src/gcluster.py yeast.fa yeast02000.txt --max 2000 --min 0
          python src/gcluster.py yeast.fa yeast20004000.txt --max 4000 --min 2000
          python src/gcluster.py yeast.fa yeast40006000.txt --max 6000 --min 4000
          python src/gcluster.py yeast.fa yeast6000100000.txt --max 100000 --min 6000
          """ 
rule  shuffle: 
    input: 
        fp = "{SAMPLE}.bed",
        genome = GENOME
    params: 
        prefix = "{IDX}" 
    output:
        "{SAMPLE}_{IDX}.bed" 
    shell: 
        "python src/shuffle.py -t {input.genome} -i {params.prefix} -b {input.fp} > {output}"

          
rule tobed: 
	input: 
             "{SAMPLE}.bowtie2.bam" 
	output: 
	     "{SAMPLE}.bed"
	shell: 
            "bedtools bamtobed -i {input} > {output}"

rule index: 
     input: 
        genome = GENOME
     output: 
        INDEX
     shell: 
         "bowtie2-build {input.genome} {output} && touch {output}"

rule tobam:
      input:
          index  = INDEX,
          sample = "galore/{READS}_trimmed.fq.gz"
      output:
          "{READS}.bowtie2.bam"  
      shell: 
            "bowtie2 -x {input.index} -U {input.sample} -S | samtools view -S -b > {output}" 

