#use --configfile to run 
#
# run with --use-conda 
#
  
rule all:
    input:
        #trim control 
        expand("galore/{FP}_trimmed.fq.gz", FP = config['FP_1']),
        expand("galore/{RNA}_trimmed.fq.gz", RNA = config['RNA_1']),
        #align control 
        expand("{FP}.sam", FP =config['FP_1']),
        expand("{FP}.bowtie2.bam", FP =config['FP_1']),
        expand("{RNA}.sam", RNA =config['RNA_1']), 
        expand("{RNA}.bowtie2.bam", RNA = config['RNA_1']),
        #trim treatment 
        expand("galore/{FP}_trimmed.fq.gz", FP = config['FP_2']),
        expand("galore/{RNA}_trimmed.fq.gz", RNA = config['RNA_2']),
        #align treatment 
        expand("{FP}.sam", FP =config['FP_2']),
        expand("{FP}.bowtie2.bam", FP =config['FP_2']),
        expand("{RNA}.sam", RNA =config['RNA_2']), 
        expand("{RNA}.bowtie2.bam", RNA = config['RNA_2']),
        #convert control bam to bed 
        expand("{FP}.bed", FP = config['FP_1']),
        expand("{RNA}.bed", RNA = config['RNA_1']),
        #convert treatment bam to bed 
        expand("{FP}.bed", FP = config['FP_2']),
        expand("{RNA}.bed", RNA = config['RNA_2']), 
        #dropoff rate of control and treatment 
        expand("{FP}_{RNA}.regression.log", FP = config['FP_1'], RNA = config['RNA_1']),
        expand("{FP}_{RNA}.regression.log", FP = config['FP_2'], RNA = config['RNA_2']),
        #dropoff rate on subsest of GO for control
        expand("{GO}.txt", GO=config['GO'] ),     
        expand("{FP}_{RNA}-{SUBSET}.regression.log", FP = config['FP_1'], RNA = config['RNA_1'], SUBSET=config['GL']), 
        expand("{FP}_{RNA}-{SUBSET}.regression.log", FP = config['FP_1'], RNA = config['RNA_1'], SUBSET=config['GO']),
        #dropoff rate on subsest of GO for treatment 
        expand("{FP}_{RNA}-{SUBSET}.regression.log", FP = config['FP_2'], RNA = config['RNA_2'], SUBSET=config['GL']),
        expand("{FP}_{RNA}-{SUBSET}.regression.log", FP = config['FP_2'], RNA = config['RNA_2'], SUBSET=config['GO']),        
        #compare significance of GO subset to main dataset either control or treatment 
        expand("{FP}_{RNA}-{SUBSET}.ttest.log", FP = config['FP_1'], RNA = config['RNA_1'], SUBSET=config['GL']),
        expand("{FP}_{RNA}-{SUBSET}.ttest.log", FP = config['FP_1'], RNA = config['RNA_1'], SUBSET=config['GO']),
        expand("{FP}_{RNA}-{SUBSET}.ttest.log", FP = config['FP_2'], RNA = config['RNA_2'], SUBSET=config['GL']),
        expand("{FP}_{RNA}-{SUBSET}.ttest.log", FP = config['FP_2'], RNA = config['RNA_2'], SUBSET=config['GO']),
        #compare significance of control vs treatment 
        expand("{FP1}_{RNA1}.{FP2}_{RNA2}.ttest.log", FP1 = config['FP_1'], RNA1 = config['RNA_1'], FP2 = config['FP_2'], RNA2 = config['RNA_2']),
        #Case study of running on single genes for both control and treatment 
        expand("{FP}_{RNA}-{SUBSET}.regression.log", FP = config['FP_1'], RNA = config['RNA_1'], SUBSET="msh2"),
        expand("{FP}_{RNA}-{SUBSET}.regression.log", FP = config['FP_1'], RNA = config['RNA_1'], SUBSET="mlh1"),
        expand("{FP}_{RNA}-{SUBSET}.regression.log", FP = config['FP_2'], RNA = config['RNA_2'], SUBSET="msh2"),
        expand("{FP}_{RNA}-{SUBSET}.regression.log", FP = config['FP_2'], RNA = config['RNA_2'], SUBSET="mlh1"),
        #Compare Gene Length of control vs treatment 
        expand("{FP1}_{RNA1}_{FP2}_{RNA2}-{SUBSET}.ttest.log", FP1 = config['FP_1'], RNA1 = config['RNA_1'], FP2 = config['FP_2'], RNA2 = config['RNA_2'], SUBSET=config['GL'])
        

rule compare: 
   input: 
        "{SAMPLE1}_{SAMPLE2}.regression.log",
        "{SAMPLE3}_{SAMPLE4}.regression.log" 
   output: 
        "{SAMPLE1}_{SAMPLE2}.{SAMPLE3}_{SAMPLE4}.ttest.log" 
   conda: 'env/env-ttest.yaml'
   shell: 
     """
       python scripts/ttest.py {input[0]} {input[1]} > {output}
     """

rule compare_to_subset:
    input: 
        "{SAMPLE1}_{SAMPLE2}.regression.log",
        "{SAMPLE1}_{SAMPLE2}-{SUBSET}.regression.log"
    conda: 'env/env-ttest.yaml'
    output: 
         "{SAMPLE1}_{SAMPLE2}-{SUBSET}.ttest.log" 
    shell:
       """
       python scripts/ttest.py {input[0]} {input[1]} > {output}
       """
  
rule compare_subsets:
   input: 
       "{SAMPLE1}_{SAMPLE2}-{SUBSET}.regression.log",
       "{SAMPLE3}_{SAMPLE4}-{SUBSET}.regression.log"
   output: 
       "{SAMPLE1}_{SAMPLE2}_{SAMPLE3}_{SAMPLE4}-{SUBSET}.ttest.log"
   conda: 'env/env-ttest.yaml'
   shell: 
       """
       python scripts/ttest.py {input[0]} {input[1]} > {output}
       """


rule compare_two_subsets:
   input:
       "{SAMPLE1}_{SAMPLE2}-{SUBSET1}.regression.log",
       "{SAMPLE1}_{SAMPLE2}-{SUBSET2}.regression.log"
   output:
       "{SAMPLE1}_{SAMPLE2}-{SUBSET1}-{SUBSET2}.ttest.log"
   conda: 'env/env-ttest.yaml'
   shell:
       """
       python scripts/ttest.py {input[0]} {input[1]} > {output}
       """

rule ribofilio: 
    input:
         fp = "{SAMPLE1}.bed",
	 rna = "{SAMPLE2}.bed",
	 genome = config['GENOME'] 
    output: 
         "{SAMPLE1}_{SAMPLE2}.regression.log"
    params:
        prefix="{SAMPLE1}_{SAMPLE2}", 
        binsize = config['BINSIZE'],
        pvalue_sides = config['PVALUE_SIDES']
    conda: 'env/env-ribo.yaml'
    shell:
        "python {config[src]}/ribofilio.py -t {input.genome} -f {input.fp} -r {input.rna} -b {params.binsize} -v {params.pvalue_sides} -o {params.prefix} "

       
rule subset:
    input:
        fp = "{SAMPLE1}.bed",
        rna = "{SAMPLE2}.bed",
	subset = "{SUBSET}.txt",
        genome = config['GENOME']
    output:
        "{SAMPLE1}_{SAMPLE2}-{SUBSET}.regression.log"
    params:
        prefix="{SAMPLE1}_{SAMPLE2}-{SUBSET}",
        binsize = config['BINSIZE']
    conda: 'env/env-ribo.yaml'
    shell: 
        "python {config[src]}/ribofilio.py -t {input.genome} -f {input.fp} -r {input.rna} -s {input.subset} -b {params.binsize} -o {params.prefix}"


rule get_GO:
     output:
        expand("{GO}.txt", GO=config['GO'])
     params: 
        go = expand("{GO}", GO=config['GO'] )
     conda: 'env/env-go.yaml'
     shell:
         """
         Rscript {config[scripts]}/getGO.R {params.go}
         """

rule cluster: 
     output: 
        expand("{GL}.txt", GL=config['GL'])
     conda: 'env/env-cluster.yaml'   
     shell: 
          """
          python {config[scripts]}/gcluster.py yeast.fa yeast0500.txt -n 0 -x 500
	  python {config[scripts]}/gcluster.py yeast.fa yeast5001000.txt -n 500 -x 1000
          python {config[scripts]}/gcluster.py yeast.fa yeast01000.txt -n 0 -x 1000
	  python {config[scripts]}/gcluster.py yeast.fa yeast10002000.txt -n 1000 -x 2000
	  python {config[scripts]}/gcluster.py yeast.fa yeast20003000.txt -n 2000 -x 3000
	  python {config[scripts]}/gcluster.py yeast.fa yeast30004000.txt -n 3000 -x 4000
	  python {config[scripts]}/gcluster.py yeast.fa yeast40005000.txt -n 4000 -x 5000
	  python {config[scripts]}/gcluster.py yeast.fa yeastg5000.txt -n 5000
          """ 

rule index: 
     input: 
        genome = config['GENOME']
     output: 
        config['INDEX']
     conda: 'env/env-index.yaml'
     shell: 
       """
        bowtie2-build {input.genome} {output} && touch {output}
       """

rule trim: 
    input:
        sample = "{SAMPLE}.fastq",
	index = config['INDEX']
    output:
        "galore/{SAMPLE}_trimmed.fq.gz", 
    params: 
       adapter =config['ADAPTERS']
    conda: 'env/env-trim.yaml'
    shell:
        """
        trim_galore --gzip --retain_unpaired --trim1 -a {params.adapter} --fastqc --fastqc_args "--outdir fastqc" -o galore {input.sample}   
        """ 

rule tosam:
      input:
          index  = config['INDEX'],
          sample = "galore/{READS}_trimmed.fq.gz"
      output:
          "{READS}.sam",
      conda: 'env/env-align.yaml'
      shell: 
          """ 
           bowtie2 -x {input.index} -U {input.sample} -S {output[0]} -p4  
          """ 	
rule tobed: 
      input: 
          "{READS}.sam"
      conda: 'env/env-align.yaml'
      output: 
          "{READS}.bowtie2.bam",
          "{READS}.bed" 
      shell: 
         """
           samtools view -S -b {input} > {output[0]}
           bedtools bamtobed -i {output[0]} > {output[1]} 
         """

