GENOME = "yeast.fa"
INDEX = "yeast"
N = range(1,3)


"""
rule all:
    input:
	"sample.trimmed.fq.gz"
"""


rule ribofilio: 
    input:
        fp = "{SAMPLE1}.bed",
	rna = "{SAMPLE2}.bed",
	genome = GENOME 
    output: 
         "{SAMPLE1}_{SAMPLE2}.regression.log"
    params:
        prefix="{SAMPLE1}_{SAMPLE2}"
    shell:
        "python ../src/ribofilio.py -t {input.genome} -f {input.fp} -r {input.rna} -o {params.prefix} "

rule  shuffle: 
    input: 
        fp = "{SAMPLE}.bed",
        genome = GENOME
    params: 
        prefix = "{IDX}" 
    output:
        "{SAMPLE}.{IDX}.bed" 
    shell: 
        "python src/shuffle.py -t {input.genome} -b {input.fp} -o {output}"


rule ribo_all: 
    input:
       fp = "{FP}_{RNA}.regression.log",
       dummies = expand("{{FP}}.{IDX}_{{RNA}}.regression.log", IDX= N)
    params:
       all = "{FP}_{RNA}.all" 
    output:
       "{FP}_{RNA}.slopes.png"
    shell: 
       """
       cat {input.fp} {input.dummies} > {params.all}
       python src/stats.py {params.all}
       """    
       

rule subset:
    input:
        fp = "{SAMPLE1}.bed",
        rna = "{SAMPLE2}.bed",
	smallset ="{SUBSET}.txt",
        genome = GENOME
    output:
        "{SAMPLE1}_{SAMPLE2}-{SUBSET}.regression.log"
    params:
        prefix="{SAMPLE1}_{SAMPLE2}-{SUBSET}"
    shell: 
        "python ../src/ribofilio.py -t {input.genome} -f {input.fp} -r {input.rna} -s {input.smallset} -o {params.prefix}"

rule subset_all: 
    input:
       fp = "{FP}_{RNA}-{SUBSET}.regression.log",
       dummies = expand("{{FP}}.{IDX}_{{RNA}}-{{SUBSET}}.regression.log", IDX= N)
    params:
       all = "{FP}_{RNA}.{SUBSET}.all"
    output:
       "{FP}_{RNA}.{SUBSET}.slopes.png"
    shell:
       """
       cat {input.fp} {input.dummies} > {params.all}
       python src/stats.py {params.all}
       """

rule get_GO:
     output:
        "GO0006119.txt",
        "GO0006406.txt",
        "GO0006412.txt",
        "GO0006950.txt",
        "GO0007049.txt",
        "GO0009651.txt"
     shell:
        "Rscript ../src/getBiomart.R"

rule cluster: 
     output: 
         "yeast02000.txt",
         "yeast20004000.txt",
         "yeast40006000.txt",
         "yeast6000100000.txt"
     shell: 
          """
          python src/gcluster.py yeast.fa yeast02000.txt --max 2000 --min 0
          python src/gcluster.py yeast.fa yeast20004000.txt --max 4000 --min 2000
          python src/gcluster.py yeast.fa yeast40006000.txt --max 6000 --min 4000
          python src/gcluster.py yeast.fa yeast6000100000.txt --max 100000 --min 6000
          """ 

rule tobed: 
	input: 
             "{SAMPLE}.bowtie2.bam" 
	output: 
	     "{SAMPLE}.bed"
	shell: 
            "bedtools bamtobed -i {input} > {output}"

rule index: 
     input: 
        genome = GENOME
     output: 
        INDEX
     shell: 
        "bowtie2-build {input.genome} {output} && touch {output}"

rule tobam:
      input:
          index  = INDEX,
          sample = "galore/{READS}_trimmed.fq.gz"
      output:
          "{READS}.bowtie2.bam"  
      shell: 
          "bowtie2 -x {input.index} -U {input.sample} -S | samtools view -S -b > {output}" 

