GENOME = "yeast.fa"
INDEX = "yeast"
N = range(1,1001)
ADAPTERS = "CTGTAGGCACCATCAAT"


rule all:
    input:
        "SRR5090936_SRR5090934-GO0006412.slopes.png"
"""
rule download: 
     output: 
          "SRR5090936.fastq",
          "SRR5090934.fastq", 
          "SRR5090937.fastq", 
          "SRR5090935.fastq",
          "SRR9670820.fastq",
          "SRR9670821.fastq", 
          "SRR9670822.fastq",
          "SRR9670823.fastq"

     shell: 
         wget https://sra-downloadb.be-md.ncbi.nlm.nih.gov/sos2/sra-pub-run-9/SRR5090934/SRR5090934.1 
	 wget https://sra-downloadb.be-md.ncbi.nlm.nih.gov/sos2/sra-pub-run-9/SRR5090935/SRR5090935.2
         wget https://sra-downloadb.be-md.ncbi.nlm.nih.gov/sos2/sra-pub-run-9/SRR5090937/SRR5090937.1
         wget https://sra-downloadb.be-md.ncbi.nlm.nih.gov/sos2/sra-pub-run-9/SRR5090936/SRR5090936.1
         fastq-dump --split-files SRR5090935.1
         fastq-dump --split-files SRR5090936.1
         fastq-dump --split-files SRR5090937.1
         mv SRR5090934.1_1.fastq  SRR5090934.fastq
         mv SRR5090935.1_1.fastq  SRR5090935.fastq
         mv SRR5090936.1_1.fastq  SRR5090936.fastq
         mv SRR5090937.1_1.fastq  SRR5090937.fastq
         wget https://sra-download.ncbi.nlm.nih.gov/traces/sra50/SRR/009444/SRR9670820
         wget https://sra-download.ncbi.nlm.nih.gov/traces/sra59/SRR/009444/SRR9670821
         wget https://sra-download.ncbi.nlm.nih.gov/traces/sra67/SRR/009444/SRR9670822
         wget https://sra-download.ncbi.nlm.nih.gov/traces/sra2/SRR/009444/SRR9670823
         fastq-dump --split-files SRR9670820
         fastq-dump --split-files SRR9670821
         fastq-dump --split-files SRR9670822
         fastq-dump --split-files SRR9670823
"""

rule ribofilio: 
    input:
         fp = "{SAMPLE1}.bed",
	 rna = "{SAMPLE2}.bed",
	 genome = GENOME 
    output: 
         "{SAMPLE1}_{SAMPLE2}.regression.log"
    params:
        prefix="{SAMPLE1}_{SAMPLE2}"
    shell:
        "python ../src/ribofilio.py -t {input.genome} -f {input.fp} -r {input.rna} -o {params.prefix} "

rule ribo_all: 
    input:
       fp = "{FP}_{RNA}.regression.log",
       dummies = expand("{{FP}}.{IDX}_{{RNA}}.regression.log", IDX= N)
    params:
       all = "{FP}_{RNA}.all" 
    output:
       "{FP}_{RNA}.slopes.png"
    shell: 
       """
       cat {input.fp} {input.dummies} > {params.all}
       python src/stats.py {params.all}
       """    
       
rule subset:
    input:
        fp = "{SAMPLE1}.bed",
        rna = "{SAMPLE2}.bed",
	subset = "{SUBSET}.txt",
        genome = GENOME
    output:
        "{SAMPLE1}_{SAMPLE2}-{SUBSET}.regression.log"
    params:
        prefix="{SAMPLE1}_{SAMPLE2}-{SUBSET}"
    shell: 
        "python ../src/ribofilio.py -t {input.genome} -f {input.fp} -r {input.rna} -s {input.subset} -o {params.prefix}"

rule subset_all: 
    input:
       fp = "{FP}_{RNA}-{SUBSET}.regression.log",
       dummies = expand("{{FP}}.{IDX}_{{RNA}}-{{SUBSET}}.regression.log", IDX= N)
    params:
       all = "{FP}_{RNA}.{SUBSET}.all"
    output:
       "{FP}_{RNA}.{SUBSET}.slopes.png"
    shell:
       """
       cat {input.fp} {input.dummies} > {params.all}
       python src/stats.py {params.all}
       """

rule get_GO:
     output:
        "GO0006119.txt",
        "GO0006406.txt",
        "GO0006412.txt",
        "GO0006950.txt",
        "GO0007049.txt",
        "GO0009651.txt"
     shell:
        "Rscript src/getGO.R"

rule cluster: 
     output: 
         "yeast02000.txt",
         "yeast20004000.txt",
         "yeast40006000.txt",
         "yeast6000100000.txt"
     shell: 
          """
          python src/gcluster.py yeast.fa yeast02000.txt --max 2000 --min 0
          python src/gcluster.py yeast.fa yeast20004000.txt --max 4000 --min 2000
          python src/gcluster.py yeast.fa yeast40006000.txt --max 6000 --min 4000
          python src/gcluster.py yeast.fa yeast6000100000.txt --max 100000 --min 6000
          """ 


rule  shuffle:
    input:
        fp = "{SAMPLE}.bed",
        genome = GENOME
    output:
        expand("{{SAMPLE}}.{IDX}.bed", IDX= N) 
    run:
        """
        for i in N:
              shell(python src/shuffle.py -t {input.genome} -b {input.fp} -o {SAMPLE}.i.bed" 
        """

rule index: 
     input: 
        genome = GENOME
     output: 
        INDEX
     shell: 
        "bowtie2-build {input.genome} {output} && touch {output}"

	
rule trim: 
    input:
        sample = "{SAMPLE}.fastq",
	index = INDEX
    output:
        "galore/{SAMPLE}_trimmed.fq.gz", 
    params: 
       adapter =ADAPTERS
    shell:
        """
        mkdir galore
        mkdir fastqc
        trim_galore --gzip --retain_unpaired --trim1 -a {params.adapter} --fastqc --fastqc_args "--outdir fastqc" -o galore {output[0]}   
        """

rule tobam:
      input:
          index  = INDEX,
          sample = "galore/{READS}_trimmed.fq.gz"
      output:
          "{READS}.bowtie2.bam"
      shell: 
          "bowtie2 -x {input.index} -U {input.sample} -S | samtools view -S -b > {output[0]}" 	

rule tobed: 
	input: 
             "{SAMPLE}.bowtie2.bam" 
	output: 
	     "{SAMPLE}.bed"
	shell: 
            "bedtools bamtobed -i {input} > {output}"

