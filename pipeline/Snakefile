configfile: "config.yaml"

rule ribofilio: 
    input:
         "{fp}.bed",
	 "{rna}.bed",
	 genome = config['GENOME'] 
    output: 
         "{fp}_{rna}.regression.log"
    params:
        prefix="{fp}_{rna}"
    shell:
        """
        python ../src/ribofilio.py -t {input[2]} -f {input[0]} -r {input[1]} -o {params.prefix}
        for i in range (1, config['N']): 
             python ../src/ribofilio.py -t {input[2]} -f {wildcards.fp}_$i.bed -r {input[1]} -o {params.prefix} 
        """ 
rule run_subset:
    input:
       "{SUBSET}.txt",
       "{fp}.bed",
       "{rna}.bed",
       config['GENOME']
    output:
        "{fp}_{rna}-{SUBSET}.regression.log"
    params:
        prefix="{fp}_{rna}-{SUBSET}"
    shell: 
        """
        python ../src/ribofilio.py -t {input[3]} -f {input[0]} -r {input[1]} -s {input[0]} -o {params.prefix}
        for i in range (1, config['N']):
               python ../src/ribofilio.py -t {input[3]} -f {wildcards.fp}_$i.bed -r {input[1]} -s {input[0]} -o {params.prefix}
        """ 

rule get_GO:
     output:
        "GO0006119.txt",
        "GO0006406.txt",
        "GO0006412.txt",
        "GO0006950.txt",
        "GO0007049.txt",
        "GO0009651.txt"
     shell:
        "Rscript ../src/getBiomart.R"

rule cluster: 
     output: 
         "yeast02000.txt",
         "yeast20004000.txt",
         "yeast40006000.txt",
         "yeast6000100000.txt"
     shell: 
          """
          python src/gcluster.py yeast.fa yeast02000.txt --max 2000 --min 0
          python src/gcluster.py yeast.fa yeast20004000.txt --max 4000 --min 2000
          python src/gcluster.py yeast.fa yeast40006000.txt --max 6000 --min 4000
          python src/gcluster.py yeast.fa yeast6000100000.txt --max 100000 --min 6000
          """ 

rule index: 
     input: 
        genome = config['GENOME']
     output: 
        genome_index = config['INDEX']
     shell: 
        "bowtie2-build {input.genome} {output} && touch {output}"

rule trim: 
    input:
       sample = "{sample}.fastq",
       index = config['INDEX']
    output:
        "galore/{sample}_trimmed.fq.gz", 
    params: 
       adapter = config['ADAPTERS']
    shell:
        """
        trim_galore --gzip --retain_unpaired --trim1 -a {params.adapter} --fastqc --fastqc_args "--outdir fastqc" -o galore {input.sample}
        """ 

rule tobam:
      input:
          "galore/{sample}_trimmed.fq.gz",
          config['INDEX']
      output:
          "{sample}.bowtie2.bam"
      shell: 
          """
          bowtie2 -x {input[1]} -U {input[0]} -S | samtools view -S -b > {output}
          """ 

rule tobed: 
	input: 
            "{sample}.bam"
	output: 
	    "{sample}.bed"
	shell: 
            "bedtools bamtobed -i {input} > {output}"
